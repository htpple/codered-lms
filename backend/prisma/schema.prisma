// prisma/schema.prisma

// 1. Где лежит БД и как к ней подключаться
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // берёт из backend/.env
}

// 2. Генератор TypeScript‑клиента Prisma
generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("STUDENT")
  createdAt DateTime @default(now())

  // связь «студент → группа» (группа может быть null для преподавателя)
  group     Group?   @relation("GroupMembers", fields: [groupId], references: [id])
  groupId   Int?
}

model Group {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  // связь «группа → множество студентов»
  students  User[]   @relation("GroupMembers")
  lessons   Lesson[]
}

model Subject {
  id        Int      @id @default(autoincrement())
  // человекочитаемое название, уникально
  name      String   @unique
  // ссылка на уроки этого предмета
  lessons   Lesson[]
}

model Lesson {
  id           Int       @id @default(autoincrement())
  
  // к какой группе относится урок
  group        Group     @relation(fields: [groupId], references: [id])
  groupId      Int

  // по какому предмету
  subject      Subject   @relation(fields: [subjectId], references: [id])
  subjectId    Int

  // когда стартует урок
  scheduledAt  DateTime

  // опционально: тема урока
  topic        String?

  createdAt    DateTime  @default(now())
}